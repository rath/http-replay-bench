=============================================
  HTTP Benchmark tool with recorded packets 
=============================================

Author
-----------
Jang-Ho Hwang, rath@xrath.com

Requirement
-----------
Java 6 or greater


Usage
-----------
java -jar rb.jar -d samples -c 100 -n 20000 http://myservice.com/


Expected result
---------------



Options
-----------
d : A directory pathname that includes captured http-requests in file formats. 
    This file is generated by rb-capture-plugin.jar.

c : concurreny. number of multiple requests to replay at a time. Default is one
    request at a time. The default implementation is built with n-thread. 

n : Number of requests to replay for benchmarking session. this number is 
    belong to each thread to replay http-requests.


Format of Captured Requests
---------------------------
Captured requests are stored with Java Object Serialization. A sequence of 
java.util.Map objects. These maps are not stored in java.util.List. Instead,
each map have its own stream header and footer. Following is a code snippet 
which is intended to capture. 

  FileOutputStream fos = ...
  for(a-request : http-requests) {
    ObjectOutputStream oos = new ObjectOutputStream(fos); 
    oos.writeObject(a-request);
  }

A http-request is a java.util.Map object which includes following attributes. 

  REMOTE_ADDR  : a IP in String. but not be used in this benchmark tool.
  METHOD       : HTTP Method in String . it can be GET, POST, DELETE, PUT.
  PARAMETERS   : a Map which is stored all parameters included in a request. 
                 Its generic type is Map<String, Object>. the format of a 
                 value is generally String and can be String[].
  REQUEST_URI  : a URI in String. Be careful that this value doesn't include
                 querystring even in GET metho.d.
  TIMESTAMP    : timestamp when this request was sent that represented by Long.
  HEADERS      : a Map which is includes all HTTP request headers. Its generic
                 type is Map<String, String>. 



